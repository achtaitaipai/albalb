*,
*::before,
*::after {
  box-sizing: border-box;
}
* {
  margin: 0;
  padding: 0;
}
html,
body,
#root {
  height: 100%;
}

:root {
  line-height: 1.5;
  font-synthesis: none;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  -webkit-text-size-adjust: 100%;
}

body {
  font-family: monospace;
  font-size: clamp(1.13rem, calc(1.08rem + 0.22vw), 1.25rem);

  line-height: 1.5;

  font-synthesis: none;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  -webkit-text-size-adjust: 100%;
  background-color: var(--oc-gray-1);
  color: var(--oc-gray-8);
}

main {
  height: 100%;
  background-color: var(--oc-gray-2);
  display: grid;
  place-content: center;
}

button {
  cursor: pointer;
  background-color: transparent;
  border: 0;
  padding: 0.2em;
  padding: 0;
}

button svg {
  width: 1em;
  display: block;
}

.terminal {
  inline-size: clamp(20rem, 80vw, 66ch);
  margin-inline: auto;
  background-color: var(--oc-gray-0);
  display: flex;
  flex-direction: column;
  padding: 1rem;
  border-radius: 0.2rem;
  border: 1px solid var(--oc-gray-3);
  height: min(66ch, 80vw);
  overflow: auto;
}

.terminal textarea {
  resize: none;
  border: 0;
  outline: 0;
  background-color: transparent;
  font: inherit;
  color: inherit;
  flex: 1;
  line-break: normal;
}
.logs {
  display: flex;
  align-items: center;
}

.logs > span {
  flex: 1;
}

.logs:not(:hover, :focus) > .copyBtn {
  opacity: 0;
}

.copyBtn:active {
  animation: scale-up 0.3s;
}

.copyBtn {
  position: relative;
}

.copyBtn.success::after {
  content: "copiÃ©";
  position: absolute;
  right: 150%;
  top: -100%;
  border: 1px solid var(--oc-gray-2);
  background-color: var(--oc-gray-1);
  padding: 0.2em;
  animation: come-in 0.3s;
}

@keyframes come-in {
  from {
    transform: translate(0, 100%) scale(1, 0);
  }
}

@keyframes scale-up {
  to {
    transform: scale(1.25);
  }
}

.userInput {
  display: flex;
  gap: 0.5em;
}

.result::before {
  content: "\00a0 ";
}

.terminal .userInput::before {
  content: "> ";
}

.terminal .error {
  color: var(--oc-red-8);
}
